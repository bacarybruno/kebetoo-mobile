// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders VideoModal 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    pointerEvents="box-none"
    style={
      Array [
        Object {
          "zIndex": 1,
        },
        false,
      ]
    }
  >
    <View
      accessibilityElementsHidden={false}
      importantForAccessibility="auto"
      onLayout={[Function]}
      pointerEvents="box-none"
      style={null}
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 0,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderBottomColor": "rgb(216, 216, 216)",
              "flex": 1,
              "shadowColor": "rgb(216, 216, 216)",
              "shadowOffset": Object {
                "height": 0.5,
                "width": 0,
              },
              "shadowOpacity": 0.85,
              "shadowRadius": 0,
            }
          }
        />
      </View>
      <View
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "maxHeight": undefined,
            "minHeight": undefined,
            "opacity": undefined,
            "transform": undefined,
          }
        }
      >
        <View
          pointerEvents="none"
          style={
            Object {
              "height": 0,
            }
          }
        />
        <View
          pointerEvents="box-none"
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "marginHorizontal": 16,
                "opacity": 1,
              }
            }
          >
            <Text
              accessibilityRole="header"
              numberOfLines={1}
              onLayout={[Function]}
              style={
                Object {
                  "color": "rgb(28, 28, 30)",
                  "fontSize": 17,
                  "fontWeight": "600",
                }
              }
            >
              jest
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "opacity": 1,
          }
        }
      />
      <View
        accessibilityElementsHidden={false}
        closing={false}
        gestureVelocityImpact={0.3}
        importantForAccessibility="auto"
        onClose={[Function]}
        onGestureBegin={[Function]}
        onGestureCanceled={[Function]}
        onGestureEnd={[Function]}
        onOpen={[Function]}
        onTransitionStart={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
        transitionSpec={
          Object {
            "close": Object {
              "animation": "spring",
              "config": Object {
                "damping": 500,
                "mass": 3,
                "overshootClamping": true,
                "restDisplacementThreshold": 10,
                "restSpeedThreshold": 10,
                "stiffness": 1000,
              },
            },
            "open": Object {
              "animation": "spring",
              "config": Object {
                "damping": 500,
                "mass": 3,
                "overshootClamping": true,
                "restDisplacementThreshold": 10,
                "restSpeedThreshold": 10,
                "stiffness": 1000,
              },
            },
          }
        }
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            collapsable={false}
            forwardedRef={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            style={
              Object {
                "flex": 1,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                  Object {
                    "translateX": 0,
                  },
                ],
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "backgroundColor": "rgb(242, 242, 242)",
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": -1,
                  },
                  "shadowOpacity": 0.3,
                  "shadowRadius": 5,
                  "top": 0,
                  "width": 3,
                }
              }
            />
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                    "overflow": "hidden",
                  },
                  Array [
                    Object {
                      "backgroundColor": "rgb(242, 242, 242)",
                    },
                    undefined,
                  ],
                ]
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "flexDirection": "column-reverse",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    accessible={true}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Array [
                        Object {
                          "alignSelf": "stretch",
                          "backgroundColor": "#000",
                          "flex": 1,
                          "justifyContent": "space-between",
                          "overflow": "hidden",
                        },
                        Object {},
                      ]
                    }
                  >
                    <Video
                      controlAnimationTiming={500}
                      controlTimeout={5000}
                      disableVolume={true}
                      doubleTapTime={200}
                      ignoreSilentSwitch="ignore"
                      isFullscreen={false}
                      muted={false}
                      navigator={
                        Object {
                          "goBack": [MockFunction],
                          "setOptions": [MockFunction] {
                            "calls": Array [
                              Array [
                                Object {
                                  "cardStyleInterpolator": [Function],
                                  "gestureDirection": "horizontal",
                                  "headerShown": false,
                                  "headerStyleInterpolator": [Function],
                                  "headerTransparent": true,
                                  "title": "",
                                  "transitionSpec": Object {
                                    "close": Object {
                                      "animation": "timing",
                                      "config": Object {
                                        "duration": 400,
                                        "easing": [Function],
                                      },
                                    },
                                    "open": Object {
                                      "animation": "timing",
                                      "config": Object {
                                        "duration": 400,
                                        "easing": [Function],
                                      },
                                    },
                                  },
                                },
                              ],
                            ],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                        }
                      }
                      onBack={[Function]}
                      onEnd={[Function]}
                      onError={[Function]}
                      onHideControls={[Function]}
                      onLoad={[Function]}
                      onLoadStart={[Function]}
                      onProgress={[Function]}
                      onSeek={[Function]}
                      onShowControls={[Function]}
                      paused={false}
                      playInBackground={false}
                      playWhenInactive={false}
                      poster="jest://fake-video-poster.png"
                      rate={1}
                      repeat={true}
                      resizeMode="contain"
                      seekColor="rgba(0, 122, 255, 255)"
                      showOnStart={false}
                      source={
                        Object {
                          "uri": "jest://fake-video.mp4",
                        }
                      }
                      style={
                        Array [
                          Object {
                            "bottom": 0,
                            "left": 0,
                            "overflow": "hidden",
                            "position": "absolute",
                            "right": 0,
                            "top": 0,
                          },
                          Object {},
                        ]
                      }
                      title=""
                      toggleResizeModeOnFullscreen={true}
                      volume={1}
                    />
                    <View
                      style={
                        Object {
                          "alignItems": "stretch",
                          "flex": 1,
                          "justifyContent": "flex-start",
                          "marginTop": 0,
                          "opacity": 0,
                        }
                      }
                    >
                      <View
                        accessibilityIgnoresInvertColors={true}
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "flexDirection": "column",
                              "height": null,
                              "justifyContent": "space-between",
                              "width": null,
                            },
                          ]
                        }
                      >
                        <Image
                          source={
                            Object {
                              "testUri": "../../react-native-video-controls/assets/img/top-vignette.png",
                            }
                          }
                          style={
                            Array [
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              },
                              Object {
                                "height": undefined,
                                "width": undefined,
                              },
                              Array [
                                Object {
                                  "resizeMode": "stretch",
                                },
                              ],
                            ]
                          }
                        />
                        <RCTSafeAreaView
                          emulateUnlessSupported={true}
                          style={
                            Object {
                              "alignItems": "center",
                              "alignSelf": "stretch",
                              "flexDirection": "row",
                              "justifyContent": "space-between",
                              "margin": 12,
                              "marginBottom": 18,
                              "width": null,
                            }
                          }
                        >
                          <View
                            accessible={true}
                            focusable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Array [
                                Object {
                                  "padding": 16,
                                },
                                Object {},
                              ]
                            }
                          >
                            <Image
                              source={
                                Object {
                                  "testUri": "../../react-native-video-controls/assets/img/back.png",
                                }
                              }
                            />
                          </View>
                          <View
                            style={
                              Object {
                                "alignItems": "center",
                                "flexDirection": "row",
                                "justifyContent": "center",
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "padding": 16,
                                  },
                                ]
                              }
                            />
                            <View
                              accessible={true}
                              focusable={true}
                              onClick={[Function]}
                              onResponderGrant={[Function]}
                              onResponderMove={[Function]}
                              onResponderRelease={[Function]}
                              onResponderTerminate={[Function]}
                              onResponderTerminationRequest={[Function]}
                              onStartShouldSetResponder={[Function]}
                              style={
                                Array [
                                  Object {
                                    "padding": 16,
                                  },
                                  Object {
                                    "flexDirection": "row",
                                  },
                                ]
                              }
                            >
                              <Image
                                source={
                                  Object {
                                    "testUri": "../../react-native-video-controls/assets/img/expand.png",
                                  }
                                }
                              />
                            </View>
                          </View>
                        </RCTSafeAreaView>
                      </View>
                    </View>
                    <View
                      style={
                        Object {
                          "alignItems": "stretch",
                          "flex": 2,
                          "justifyContent": "flex-end",
                          "marginBottom": 0,
                          "opacity": 0,
                        }
                      }
                    >
                      <View
                        accessibilityIgnoresInvertColors={true}
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "flexDirection": "column",
                              "height": null,
                              "justifyContent": "space-between",
                              "width": null,
                            },
                          ]
                        }
                      >
                        <Image
                          source={
                            Object {
                              "testUri": "../../react-native-video-controls/assets/img/bottom-vignette.png",
                            }
                          }
                          style={
                            Array [
                              Object {
                                "bottom": 0,
                                "left": 0,
                                "position": "absolute",
                                "right": 0,
                                "top": 0,
                              },
                              Object {
                                "height": undefined,
                                "width": undefined,
                              },
                              Array [
                                Object {
                                  "resizeMode": "stretch",
                                },
                              ],
                            ]
                          }
                        />
                        <View
                          collapsable={false}
                          onMoveShouldSetResponder={[Function]}
                          onMoveShouldSetResponderCapture={[Function]}
                          onResponderEnd={[Function]}
                          onResponderGrant={[Function]}
                          onResponderMove={[Function]}
                          onResponderReject={[Function]}
                          onResponderRelease={[Function]}
                          onResponderStart={[Function]}
                          onResponderTerminate={[Function]}
                          onResponderTerminationRequest={[Function]}
                          onStartShouldSetResponder={[Function]}
                          onStartShouldSetResponderCapture={[Function]}
                          style={
                            Object {
                              "alignSelf": "stretch",
                              "height": 28,
                              "marginLeft": 20,
                              "marginRight": 20,
                            }
                          }
                        >
                          <View
                            onLayout={[Function]}
                            pointerEvents="none"
                            style={
                              Object {
                                "backgroundColor": "#333",
                                "height": 1,
                                "position": "relative",
                                "top": 14,
                                "width": "100%",
                              }
                            }
                          >
                            <View
                              pointerEvents="none"
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "#FFF",
                                    "height": 1,
                                    "width": "100%",
                                  },
                                  Object {
                                    "backgroundColor": "rgba(0, 122, 255, 255)",
                                    "width": 0,
                                  },
                                ]
                              }
                            />
                          </View>
                          <View
                            pointerEvents="none"
                            style={
                              Array [
                                Object {
                                  "height": 28,
                                  "marginLeft": -7,
                                  "position": "absolute",
                                  "width": 28,
                                },
                                Object {
                                  "left": 0,
                                },
                              ]
                            }
                          >
                            <View
                              pointerEvents="none"
                              style={
                                Array [
                                  Object {
                                    "borderRadius": 12,
                                    "height": 12,
                                    "left": 8,
                                    "position": "relative",
                                    "top": 8,
                                    "width": 12,
                                  },
                                  Object {
                                    "backgroundColor": "rgba(0, 122, 255, 255)",
                                  },
                                ]
                              }
                            />
                          </View>
                        </View>
                        <RCTSafeAreaView
                          emulateUnlessSupported={true}
                          style={
                            Array [
                              Object {
                                "alignItems": "center",
                                "flexDirection": "row",
                                "height": null,
                                "justifyContent": "space-between",
                                "width": null,
                              },
                              Object {
                                "alignItems": "center",
                                "alignSelf": "stretch",
                                "justifyContent": "space-between",
                                "marginBottom": 0,
                                "marginLeft": 12,
                                "marginRight": 12,
                              },
                            ]
                          }
                        >
                          <View
                            accessible={true}
                            focusable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Array [
                                Object {
                                  "padding": 16,
                                },
                                Object {
                                  "position": "relative",
                                  "width": 80,
                                  "zIndex": 0,
                                },
                              ]
                            }
                          >
                            <Image
                              source={
                                Object {
                                  "testUri": "../../react-native-video-controls/assets/img/pause.png",
                                }
                              }
                            />
                          </View>
                          <View
                            accessible={true}
                            focusable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Array [
                                Object {
                                  "padding": 16,
                                },
                                Object {
                                  "width": 80,
                                },
                              ]
                            }
                          >
                            <Text
                              style={
                                Object {
                                  "backgroundColor": "transparent",
                                  "color": "#FFF",
                                  "fontSize": 11,
                                  "textAlign": "right",
                                }
                              }
                            >
                              -00:00
                            </Text>
                          </View>
                        </RCTSafeAreaView>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
