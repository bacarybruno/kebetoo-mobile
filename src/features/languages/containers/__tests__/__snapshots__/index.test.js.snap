// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders LanguagesPage 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    pointerEvents="box-none"
    style={
      Array [
        Object {
          "zIndex": 1,
        },
        false,
      ]
    }
  >
    <View
      accessibilityElementsHidden={false}
      importantForAccessibility="auto"
      onLayout={[Function]}
      pointerEvents="box-none"
      style={null}
    >
      <View
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "opacity": 1,
            "position": "absolute",
            "right": 0,
            "top": 0,
            "zIndex": 0,
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "rgb(255, 255, 255)",
              "borderBottomColor": "rgb(216, 216, 216)",
              "flex": 1,
              "shadowColor": "rgb(216, 216, 216)",
              "shadowOffset": Object {
                "height": 0.5,
                "width": 0,
              },
              "shadowOpacity": 0.85,
              "shadowRadius": 0,
            }
          }
        />
      </View>
      <View
        pointerEvents="box-none"
        style={
          Object {
            "height": 44,
            "maxHeight": undefined,
            "minHeight": undefined,
            "opacity": undefined,
            "transform": undefined,
          }
        }
      >
        <View
          pointerEvents="none"
          style={
            Object {
              "height": 0,
            }
          }
        />
        <View
          pointerEvents="box-none"
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <View
            pointerEvents="box-none"
            style={
              Object {
                "marginHorizontal": 16,
                "opacity": 1,
              }
            }
          >
            <Text
              accessibilityRole="header"
              numberOfLines={1}
              onLayout={[Function]}
              style={
                Object {
                  "color": "rgb(28, 28, 30)",
                  "fontSize": 17,
                  "fontWeight": "600",
                }
              }
            >
              jest
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
  <View
    onLayout={[Function]}
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      pointerEvents="box-none"
      style={
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    >
      <View
        collapsable={false}
        style={
          Object {
            "opacity": 1,
          }
        }
      />
      <View
        accessibilityElementsHidden={false}
        closing={false}
        gestureVelocityImpact={0.3}
        importantForAccessibility="auto"
        onClose={[Function]}
        onGestureBegin={[Function]}
        onGestureCanceled={[Function]}
        onGestureEnd={[Function]}
        onOpen={[Function]}
        onTransitionStart={[Function]}
        pointerEvents="box-none"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
        transitionSpec={
          Object {
            "close": Object {
              "animation": "spring",
              "config": Object {
                "damping": 500,
                "mass": 3,
                "overshootClamping": true,
                "restDisplacementThreshold": 10,
                "restSpeedThreshold": 10,
                "stiffness": 1000,
              },
            },
            "open": Object {
              "animation": "spring",
              "config": Object {
                "damping": 500,
                "mass": 3,
                "overshootClamping": true,
                "restDisplacementThreshold": 10,
                "restSpeedThreshold": 10,
                "stiffness": 1000,
              },
            },
          }
        }
      >
        <View
          pointerEvents="box-none"
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            collapsable={false}
            forwardedRef={[Function]}
            onGestureHandlerEvent={[Function]}
            onGestureHandlerStateChange={[Function]}
            style={
              Object {
                "flex": 1,
                "transform": Array [
                  Object {
                    "translateX": 0,
                  },
                  Object {
                    "translateX": 0,
                  },
                ],
              }
            }
          >
            <View
              pointerEvents="none"
              style={
                Object {
                  "backgroundColor": "rgb(242, 242, 242)",
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "shadowColor": "#000",
                  "shadowOffset": Object {
                    "height": 1,
                    "width": -1,
                  },
                  "shadowOpacity": 0.3,
                  "shadowRadius": 5,
                  "top": 0,
                  "width": 3,
                }
              }
            />
            <View
              style={
                Array [
                  Object {
                    "flex": 1,
                    "overflow": "hidden",
                  },
                  Array [
                    Object {
                      "backgroundColor": "rgb(242, 242, 242)",
                    },
                    undefined,
                  ],
                ]
              }
            >
              <View
                style={
                  Object {
                    "flex": 1,
                    "flexDirection": "column-reverse",
                  }
                }
              >
                <View
                  style={
                    Object {
                      "flex": 1,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "rgba(255, 255, 255, 255)",
                        "flex": 1,
                        "paddingHorizontal": 16,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "flexDirection": "row",
                            "height": 60,
                          },
                          undefined,
                        ]
                      }
                    >
                      <View
                        style={
                          Object {
                            "flex": 8,
                          }
                        }
                      >
                        <View
                          style={
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                            }
                          }
                        >
                          <View
                            accessible={true}
                            focusable={false}
                            hitSlop={
                              Object {
                                "bottom": 10,
                                "left": 10,
                                "right": 10,
                                "top": 10,
                              }
                            }
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "opacity": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Array [
                                  Object {
                                    "alignItems": "center",
                                    "justifyContent": "center",
                                    "marginLeft": 16,
                                    "width": 24,
                                  },
                                  Object {
                                    "marginLeft": 0,
                                    "marginRight": 16,
                                  },
                                ]
                              }
                            >
                              <Text
                                allowFontScaling={false}
                                style={
                                  Object {
                                    "color": "rgba(0,0,0,0.87)",
                                    "fontFamily": "icomoon",
                                    "fontSize": 20,
                                    "fontStyle": "normal",
                                    "fontWeight": "normal",
                                  }
                                }
                                text="kebeticon-chevron-left"
                              />
                            </View>
                          </View>
                          <View
                            style={
                              Object {
                                "flex": 1,
                              }
                            }
                          >
                            <View
                              style={
                                Object {
                                  "alignItems": "center",
                                  "flexDirection": "row",
                                }
                              }
                            >
                              <Text
                                numberOfLines={1}
                                style={
                                  Array [
                                    Object {
                                      "backgroundColor": "transparent",
                                      "color": "#000000",
                                      "fontFamily": "System",
                                      "fontSize": 22,
                                      "fontWeight": "600",
                                      "letterSpacing": 0.34375,
                                      "lineHeight": 28,
                                    },
                                    Array [
                                      Object {
                                        "color": "rgba(0,0,0,0.87)",
                                      },
                                      undefined,
                                      Array [
                                        Object {
                                          "flex": 1,
                                        },
                                        undefined,
                                      ],
                                    ],
                                  ]
                                }
                              >
                                Languages
                              </Text>
                              <ActivityIndicator
                                animating={false}
                                color="rgba(0, 122, 255, 255)"
                                hidesWhenStopped={true}
                                size="small"
                                style={
                                  Object {
                                    "marginLeft": 8,
                                  }
                                }
                              />
                            </View>
                          </View>
                        </View>
                      </View>
                      <View
                        accessible={true}
                        focusable={false}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "borderColor": "rgba(0, 122, 255, 255)",
                              "borderRadius": 5,
                              "borderWidth": 1,
                              "height": 36,
                              "justifyContent": "center",
                              "minWidth": 64,
                              "paddingHorizontal": 16,
                            },
                            undefined,
                            Object {
                              "borderColor": "rgba(199, 199, 204, 255)",
                            },
                          ]
                        }
                      >
                        <Text
                          style={
                            Array [
                              Object {
                                "backgroundColor": "transparent",
                                "color": "#FFFFFF",
                                "fontFamily": "System",
                                "fontSize": 16,
                                "fontWeight": "600",
                                "letterSpacing": -0.32,
                                "lineHeight": 21,
                              },
                              Array [
                                Object {
                                  "color": "rgba(199, 199, 204, 255)",
                                },
                                undefined,
                                undefined,
                              ],
                            ]
                          }
                        >
                          SAVE
                        </Text>
                      </View>
                    </View>
                    <RCTScrollView
                      data={
                        Array [
                          Object {
                            "locale": "en",
                            "text": "English",
                          },
                          Object {
                            "locale": "fr",
                            "text": "Français",
                          },
                        ]
                      }
                      disableVirtualization={false}
                      getItem={[Function]}
                      getItemCount={[Function]}
                      horizontal={false}
                      initialNumToRender={10}
                      keyExtractor={[Function]}
                      maxToRenderPerBatch={10}
                      onContentSizeChange={[Function]}
                      onEndReachedThreshold={2}
                      onLayout={[Function]}
                      onMomentumScrollEnd={[Function]}
                      onScroll={[Function]}
                      onScrollBeginDrag={[Function]}
                      onScrollEndDrag={[Function]}
                      removeClippedSubviews={false}
                      renderItem={[Function]}
                      scrollEventThrottle={50}
                      stickyHeaderIndices={Array []}
                      updateCellsBatchingPeriod={50}
                      viewabilityConfigCallbackPairs={Array []}
                      windowSize={21}
                    >
                      <View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "borderBottomColor": "rgba(229, 229, 234, 255)",
                                "borderBottomWidth": 1,
                                "flexDirection": "row",
                                "paddingVertical": 16,
                              }
                            }
                          >
                            <Text
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "color": "#000000",
                                    "fontFamily": "System",
                                    "fontSize": 17,
                                    "fontWeight": "400",
                                    "letterSpacing": -0.408,
                                    "lineHeight": 22,
                                  },
                                  Array [
                                    Object {
                                      "color": "rgba(0,0,0,0.87)",
                                    },
                                    undefined,
                                    undefined,
                                  ],
                                ]
                              }
                            >
                              English
                            </Text>
                          </View>
                        </View>
                        <View
                          onLayout={[Function]}
                          style={null}
                        >
                          <View
                            accessible={true}
                            focusable={true}
                            onClick={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "alignItems": "center",
                                "borderBottomColor": "rgba(229, 229, 234, 255)",
                                "borderBottomWidth": 1,
                                "flexDirection": "row",
                                "paddingVertical": 16,
                              }
                            }
                          >
                            <Text
                              style={
                                Array [
                                  Object {
                                    "backgroundColor": "transparent",
                                    "color": "#000000",
                                    "fontFamily": "System",
                                    "fontSize": 17,
                                    "fontWeight": "400",
                                    "letterSpacing": -0.408,
                                    "lineHeight": 22,
                                  },
                                  Array [
                                    Object {
                                      "color": "rgba(0,0,0,0.87)",
                                    },
                                    undefined,
                                    undefined,
                                  ],
                                ]
                              }
                            >
                              Français
                            </Text>
                            <Text
                              allowFontScaling={false}
                              style={
                                Object {
                                  "color": "rgba(0, 122, 255, 255)",
                                  "fontFamily": "Ionicons",
                                  "fontSize": 25,
                                  "fontStyle": "normal",
                                  "fontWeight": "normal",
                                  "position": "absolute",
                                  "right": 0,
                                }
                              }
                              text="ionicon-checkmark"
                            />
                          </View>
                        </View>
                      </View>
                    </RCTScrollView>
                  </View>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;

exports[`updates language 1`] = `
Array [
  Array [
    "Switching language",
    "Changing the language will reload the app. It will only take a few moments.",
    Array [
      Object {
        "onPress": [Function],
        "text": "OK",
      },
    ],
  ],
]
`;
