// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders LanguagesPage 1`] = `
<View
  style={
    Object {
      "backgroundColor": "rgba(255, 255, 255, 255)",
      "flex": 1,
      "paddingHorizontal": 16,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 60,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "flex": 8,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <View
          accessible={true}
          focusable={false}
          hitSlop={
            Object {
              "bottom": 10,
              "left": 10,
              "right": 10,
              "top": 10,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "marginLeft": 16,
                  "width": 24,
                },
                Object {
                  "marginLeft": 0,
                  "marginRight": 16,
                },
              ]
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Object {
                  "color": "rgba(0,0,0,0.87)",
                  "fontFamily": "icomoon",
                  "fontSize": 20,
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                }
              }
              text="kebeticon-chevron-left"
            />
          </View>
        </View>
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "flexDirection": "row",
              }
            }
          >
            <Text
              numberOfLines={1}
              style={
                Array [
                  Object {
                    "backgroundColor": "transparent",
                    "color": "#000000",
                    "fontFamily": "System",
                    "fontSize": 22,
                    "fontWeight": "400",
                    "letterSpacing": 0.34375,
                    "lineHeight": 28,
                  },
                  false,
                  false,
                  false,
                  Array [
                    Object {
                      "color": "rgba(0,0,0,0.87)",
                    },
                    Object {
                      "backgroundColor": "transparent",
                      "fontFamily": "System",
                      "fontWeight": "600",
                    },
                    Array [
                      Object {
                        "flex": 1,
                      },
                      undefined,
                    ],
                  ],
                ]
              }
            >
              Languages
            </Text>
            <ActivityIndicator
              animating={false}
              color="rgba(0, 122, 255, 255)"
              hidesWhenStopped={true}
              size="small"
              style={
                Object {
                  "marginLeft": 8,
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
    <View
      accessible={true}
      focusable={false}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "borderColor": "rgba(0, 122, 255, 255)",
            "borderRadius": 5,
            "borderWidth": 1,
            "height": 36,
            "justifyContent": "center",
            "minWidth": 64,
            "paddingHorizontal": 16,
          },
          undefined,
          Object {
            "borderColor": "rgba(199, 199, 204, 255)",
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "backgroundColor": "transparent",
              "color": "#FFFFFF",
              "fontFamily": "System",
              "fontSize": 16,
              "fontWeight": "400",
              "letterSpacing": -0.32,
              "lineHeight": 21,
            },
            Array [
              Object {
                "color": "rgba(199, 199, 204, 255)",
              },
              Object {
                "backgroundColor": "transparent",
                "fontFamily": "System",
                "fontWeight": "600",
              },
              undefined,
            ],
          ]
        }
      >
        SAVE
      </Text>
    </View>
  </View>
  <RCTScrollView
    data={
      Array [
        Object {
          "locale": "en",
          "text": "English",
        },
        Object {
          "locale": "fr",
          "text": "Français",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "borderBottomColor": "rgba(229, 229, 234, 255)",
              "borderBottomWidth": 1,
              "flexDirection": "row",
              "paddingVertical": 16,
            }
          }
        >
          <Text
            style={
              Array [
                false,
                Object {
                  "backgroundColor": "transparent",
                  "color": "#000000",
                  "fontFamily": "System",
                  "fontSize": 17,
                  "fontWeight": "600",
                  "letterSpacing": -0.408,
                  "lineHeight": 22,
                },
                false,
                false,
                Array [
                  Object {
                    "color": "rgba(0,0,0,0.87)",
                  },
                  Object {
                    "backgroundColor": "transparent",
                    "fontFamily": "System",
                    "fontWeight": "400",
                  },
                  undefined,
                ],
              ]
            }
          >
            English
          </Text>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "borderBottomColor": "rgba(229, 229, 234, 255)",
              "borderBottomWidth": 1,
              "flexDirection": "row",
              "paddingVertical": 16,
            }
          }
        >
          <Text
            style={
              Array [
                false,
                Object {
                  "backgroundColor": "transparent",
                  "color": "#000000",
                  "fontFamily": "System",
                  "fontSize": 17,
                  "fontWeight": "600",
                  "letterSpacing": -0.408,
                  "lineHeight": 22,
                },
                false,
                false,
                Array [
                  Object {
                    "color": "rgba(0,0,0,0.87)",
                  },
                  Object {
                    "backgroundColor": "transparent",
                    "fontFamily": "System",
                    "fontWeight": "400",
                  },
                  undefined,
                ],
              ]
            }
          >
            Français
          </Text>
          <Text
            allowFontScaling={false}
            style={
              Object {
                "color": "rgba(0, 122, 255, 255)",
                "fontFamily": "Ionicons",
                "fontSize": 25,
                "fontStyle": "normal",
                "fontWeight": "normal",
                "position": "absolute",
                "right": 0,
              }
            }
            text="ionicon-checkmark"
          />
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;
