// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders CommentInput 1`] = `
<View
  style={
    Object {
      "alignItems": "flex-end",
      "backgroundColor": "rgba(255, 255, 255, 255)",
      "flexDirection": "row",
      "paddingBottom": 10,
      "paddingHorizontal": 16,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {
            "backgroundColor": "#FAFAFA",
            "borderColor": "rgba(229, 229, 234, 255)",
            "borderRadius": 15,
            "borderWidth": 1,
            "minHeight": 48,
            "paddingLeft": 16,
          },
          Object {
            "backgroundColor": "rgba(242, 242, 247, 255)",
            "borderRadius": 22.5,
            "borderWidth": 0.5,
            "elevation": 1,
            "height": 45,
            "minHeight": 45,
            "shadowColor": "rgba(0, 0, 0, 255)",
            "shadowOffset": Object {
              "x": 0,
              "y": 0,
            },
            "shadowOpacity": 0.18,
            "shadowRadius": 1,
          },
        ]
      }
    >
      <TextInput
        allowFontScaling={true}
        blurOnSubmit={false}
        editable={true}
        multiline={true}
        onChangeText={[Function]}
        onContentSizeChange={[Function]}
        placeholder="Add a comment"
        placeholderTextColor="rgba(174, 174, 178, 255)"
        rejectResponderTermination={true}
        style={
          Array [
            Object {
              "color": "rgba(0,0,0,0.87)",
              "fontSize": 16,
            },
            Object {
              "minHeight": 45,
            },
          ]
        }
        underlineColorAndroid="transparent"
        value={null}
      />
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
      }
    }
  >
    <View
      accessible={true}
      focusable={false}
      hitSlop={
        Object {
          "bottom": 0,
          "left": 0,
          "right": 0,
          "top": 0,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "rgba(0, 122, 255, 255)",
          "borderRadius": 22.5,
          "elevation": 2,
          "height": 45,
          "justifyContent": "center",
          "marginLeft": 5,
          "maxHeight": 45,
          "maxWidth": 45,
          "opacity": 1,
          "shadowColor": "rgba(0, 0, 0, 255)",
          "shadowOffset": Object {
            "x": 0,
            "y": 1,
          },
          "shadowOpacity": 0.2,
          "shadowRadius": 1.41,
          "transform": Array [
            Object {
              "scale": 1,
            },
          ],
          "width": 45,
        }
      }
    >
      <Text
        allowFontScaling={false}
        style={
          Object {
            "color": "rgba(255, 255, 255, 255)",
            "fontFamily": "icomoon",
            "fontSize": 22.52252252252252,
            "fontStyle": "normal",
            "fontWeight": "normal",
          }
        }
        text="kebeticon-microphone"
      />
    </View>
  </View>
</View>
`;

exports[`renders CommentInput with AudioPlayer 1`] = `
<View
  style={
    Object {
      "alignItems": "flex-end",
      "backgroundColor": "rgba(255, 255, 255, 255)",
      "flexDirection": "row",
      "paddingBottom": 10,
      "paddingHorizontal": 16,
      "width": "100%",
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "#FAFAFA",
            "borderRadius": 5,
            "flex": 1,
            "flexDirection": "row",
            "height": 52,
            "maxHeight": 52,
          },
          Object {
            "backgroundColor": "rgba(242, 242, 247, 255)",
            "borderColor": "rgba(229, 229, 234, 255)",
            "borderWidth": 0.5,
            "elevation": 1,
            "marginRight": 10,
            "shadowColor": "rgba(0, 0, 0, 255)",
            "shadowOffset": Object {
              "x": 0,
              "y": 0,
            },
            "shadowOpacity": 0.18,
            "shadowRadius": 1,
          },
          undefined,
        ]
      }
      testID="player-wrapper"
    >
      <View
        style={
          Array [
            Object {
              "backgroundColor": "rgba(255, 255, 255, 255)",
              "borderBottomLeftRadius": 5,
              "borderTopLeftRadius": 5,
              "height": "100%",
              "opacity": 0.4,
              "position": "absolute",
            },
            undefined,
            Object {
              "width": "0%",
            },
          ]
        }
        testID="progress"
      />
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "rgba(242, 242, 247, 255)",
            "borderRadius": 15,
            "elevation": 2,
            "height": 30,
            "justifyContent": "center",
            "marginLeft": 16,
            "opacity": 1,
            "shadowColor": "rgba(0, 0, 0, 255)",
            "shadowOffset": Object {
              "x": 0,
              "y": 1,
            },
            "shadowOpacity": 0.2,
            "shadowRadius": 1.41,
            "width": 30,
          }
        }
      >
        <Text
          allowFontScaling={false}
          style={
            Object {
              "color": "#0B1B77",
              "fontFamily": "Ionicons",
              "fontSize": 22,
              "fontStyle": "normal",
              "fontWeight": "normal",
            }
          }
          text="ionicon-ios-play"
        />
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
          }
        }
      >
        <Image
          source={
            Object {
              "testUri": "../../../assets/images/waves.png",
            }
          }
          style={
            Object {
              "resizeMode": "contain",
              "width": "80%",
            }
          }
        />
      </View>
      <Text
        style={
          Array [
            false,
            false,
            false,
            Object {
              "backgroundColor": "transparent",
              "color": "#000000",
              "fontFamily": "System",
              "fontSize": 12,
              "fontWeight": "400",
              "letterSpacing": 0,
              "lineHeight": 16,
            },
            Array [
              Object {
                "color": "rgba(0,0,0,0.54)",
              },
              Object {
                "backgroundColor": "transparent",
                "fontFamily": "System",
                "fontWeight": "400",
              },
              Object {
                "bottom": 2,
                "position": "absolute",
                "right": 8,
              },
            ],
          ]
        }
      >
        0:00
      </Text>
    </View>
  </View>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "rgba(0, 122, 255, 255)",
        "borderRadius": 22.5,
        "elevation": 2,
        "height": 45,
        "justifyContent": "center",
        "marginLeft": 5,
        "maxHeight": 45,
        "maxWidth": 45,
        "opacity": 1,
        "shadowColor": "rgba(0, 0, 0, 255)",
        "shadowOffset": Object {
          "x": 0,
          "y": 1,
        },
        "shadowOpacity": 0.2,
        "shadowRadius": 1.41,
        "width": 45,
      }
    }
    testID="send-button"
  >
    <Text
      allowFontScaling={false}
      style={
        Object {
          "color": "rgba(255, 255, 255, 255)",
          "fontFamily": "Ionicons",
          "fontSize": 25,
          "fontStyle": "normal",
          "fontWeight": "normal",
          "marginLeft": 5,
        }
      }
      text="ionicon-md-send"
    />
  </View>
</View>
`;
